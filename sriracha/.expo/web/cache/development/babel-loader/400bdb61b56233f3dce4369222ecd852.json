{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/src/navigation/AppDrawer.js\";\n\nimport React, { useEffect } from \"react\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport { AppNavigator } from \"./AppNavigator\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { updateEmail, updatePassword, login, getUser } from \"../redux/actions/user\";\nimport HomeScreen from \"../screens/HomeScreen\";\nvar Drawer = createDrawerNavigator();\n\nvar AppDrawer = function AppDrawer(_ref) {\n  var updateAuthState = _ref.updateAuthState,\n      getUser = _ref.getUser;\n  return React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, function (screenProps) {\n    return React.createElement(AppNavigator, _extends({}, screenProps, {\n      updateAuthState: updateAuthState,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }));\n  }), React.createElement(Drawer.Screen, {\n    name: \"Settings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, function (screenProps) {\n    return React.createElement(SettingsScreen, _extends({}, screenProps, {\n      updateAuthState: updateAuthState,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }));\n  }));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateEmail: updateEmail,\n    updatePassword: updatePassword,\n    login: login,\n    getUser: getUser\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppDrawer);","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/navigation/AppDrawer.js"],"names":["React","useEffect","SettingsScreen","AppNavigator","createDrawerNavigator","bindActionCreators","connect","updateEmail","updatePassword","login","getUser","HomeScreen","Drawer","AppDrawer","updateAuthState","screenProps","mapDispatchToProps","dispatch","mapStateToProps","state","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP;AACA,SAASC,YAAT;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,OAJF;AAMA,OAAOC,UAAP;AAEA,IAAMC,MAAM,GAAGR,qBAAqB,EAApC;;AAEA,IAAMS,SAAS,GAAG,SAAZA,SAAY,OAAkC;AAAA,MAA/BC,eAA+B,QAA/BA,eAA+B;AAAA,MAAdJ,OAAc,QAAdA,OAAc;AAClD,SACE,oBAAC,MAAD,CAAQ,SAAR;AAAkB,IAAA,gBAAgB,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACK,WAAD;AAAA,WACC,oBAAC,YAAD,eAAkBA,WAAlB;AAA+B,MAAA,eAAe,EAAED,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;AAAA,GADH,CADF,EAOE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACC,WAAD;AAAA,WACC,oBAAC,cAAD,eAAoBA,WAApB;AAAiC,MAAA,eAAe,EAAED,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;AAAA,GADH,CAPF,CADF;AAeD,CAhBD;;AAkBA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAOZ,kBAAkB,CACvB;AAAEE,IAAAA,WAAW,EAAXA,WAAF;AAAeC,IAAAA,cAAc,EAAdA,cAAf;AAA+BC,IAAAA,KAAK,EAALA,KAA/B;AAAsCC,IAAAA,OAAO,EAAPA;AAAtC,GADuB,EAEvBO,QAFuB,CAAzB;AAID,CALD;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADP,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CAACY,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CH,SAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport { AppNavigator } from \"./AppNavigator\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {\n  updateEmail,\n  updatePassword,\n  login,\n  getUser,\n} from \"../redux/actions/user\";\nimport HomeScreen from \"../screens/HomeScreen\";\n\nconst Drawer = createDrawerNavigator();\n\nconst AppDrawer = ({ updateAuthState, getUser }) => {\n  return (\n    <Drawer.Navigator initialRouteName=\"Home\">\n      <Drawer.Screen name=\"Home\">\n        {(screenProps) => (\n          <AppNavigator {...screenProps} updateAuthState={updateAuthState} />\n        )}\n      </Drawer.Screen>\n\n      <Drawer.Screen name=\"Settings\">\n        {(screenProps) => (\n          <SettingsScreen {...screenProps} updateAuthState={updateAuthState} />\n        )}\n      </Drawer.Screen>\n    </Drawer.Navigator>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    { updateEmail, updatePassword, login, getUser },\n    dispatch\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppDrawer);\n"]},"metadata":{},"sourceType":"module"}
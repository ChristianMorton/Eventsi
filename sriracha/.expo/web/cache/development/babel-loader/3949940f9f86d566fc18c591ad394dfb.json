{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/src/screens/HostEventScreen.js\";\n\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport DateTimeInput from \"../components/DateTimeInput\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport AppButton from \"../components/AppButton\";\nimport { createEvent } from \"../redux/actions/events\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport \"firebase/firestore\";\nimport * as firebase from \"firebase\";\nimport MapView from \"react-native-maps\";\nimport MapComponent from \"../components/MapComponent\";\n\nvar HostEventScreen = function HostEventScreen(_ref) {\n  var navigation = _ref.navigation,\n      createEvent = _ref.createEvent;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nameOfEvent = _useState2[0],\n      setNameOfEvent = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      descriptionOfEvent = _useState4[0],\n      setDescriptionOfEvent = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDressCodeEnabled = _useState6[0],\n      setIsDressCodeEnabled = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dressCode = _useState8[0],\n      setDressCode = _useState8[1];\n\n  var _useState9 = useState(new Date(Date.now())),\n      _useState10 = _slicedToArray(_useState9, 2),\n      date = _useState10[0],\n      setDate = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isEndDateEnabled = _useState12[0],\n      setIsEndDateEnabled = _useState12[1];\n\n  var _useState13 = useState(new Date(Date.now())),\n      _useState14 = _slicedToArray(_useState13, 2),\n      endDate = _useState14[0],\n      setEndDate = _useState14[1];\n\n  var _useState15 = useState(new Date(Date.now())),\n      _useState16 = _slicedToArray(_useState15, 2),\n      replyDate = _useState16[0],\n      setReplyDate = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isReplyByDateEnabled = _useState18[0],\n      setIsReplyByDateEnabled = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      longitudeLatitude = _useState20[0],\n      setLongitudeLatitude = _useState20[1];\n\n  var toggleRSVPSwitch = function toggleRSVPSwitch() {\n    return setIsReplyByDateEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var toggleDressCodeSwitch = function toggleDressCodeSwitch() {\n    return setIsDressCodeEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var toggleEndDateSwitch = function toggleEndDateSwitch() {\n    return setIsEndDateEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var createEventButton = function createEventButton() {\n    createEvent({\n      description: descriptionOfEvent,\n      dressCode: dressCode,\n      hasDressCode: isDressCodeEnabled,\n      hasRsvp: isReplyByDateEnabled,\n      name: nameOfEvent,\n      replyByTime: firebase.firestore.Timestamp.fromDate(replyDate),\n      time: firebase.firestore.Timestamp.fromDate(date),\n      Location: new firebase.firestore.GeoPoint(longitudeLatitude.coords.latitude, longitudeLatitude.coords.longitude),\n      endTime: firebase.firestore.Timestamp.fromDate(endDate)\n    });\n    navigation.goBack();\n    navigation.navigate(\"Show Events\");\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.safeAreaContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(AppTextInput, {\n    value: nameOfEvent,\n    onChangeText: function onChangeText(text) {\n      return setNameOfEvent(text);\n    },\n    placeholder: \"Enter Name of Event\",\n    autoCapitalize: \"none\",\n    keyboardType: \"default\",\n    textContentType: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(AppTextInput, {\n    value: descriptionOfEvent,\n    onChangeText: function onChangeText(text) {\n      return setDescriptionOfEvent(text);\n    },\n    placeholder: \"Enter Description of Event\",\n    autoCapitalize: \"none\",\n    keyboardType: \"default\",\n    textContentType: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.switchContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Dress code? \"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: isDressCodeEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleDressCodeSwitch,\n    value: isDressCodeEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), isDressCodeEnabled ? React.createElement(AppTextInput, {\n    value: dressCode,\n    onChangeText: function onChangeText(text) {\n      return setDressCode(text);\n    },\n    placeholder: \"Enter Dress Code\",\n    autoCapitalize: \"none\",\n    keyboardType: \"default\",\n    textContentType: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }) : null, React.createElement(DateTimeInput, {\n    setDate: setDate,\n    date: date,\n    isDateOfEvent: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.switchContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Set an end date? \"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: isEndDateEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleEndDateSwitch,\n    value: isEndDateEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), isEndDateEnabled ? React.createElement(DateTimeInput, {\n    setDate: setEndDate,\n    date: endDate,\n    isDateOfEvent: false,\n    isEndDate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }) : null, React.createElement(View, {\n    style: styles.switchContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"RSVP? \"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: isReplyByDateEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleRSVPSwitch,\n    value: isReplyByDateEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  })), isReplyByDateEnabled ? React.createElement(DateTimeInput, {\n    setDate: setReplyDate,\n    date: replyDate,\n    isDateOfEvent: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }) : null, React.createElement(MapComponent, {\n    longitudeLatitude: longitudeLatitude,\n    setLongitudeLatitude: setLongitudeLatitude,\n    style: {\n      map: {\n        width: Dimensions.get(\"window\").width,\n        height: Dimensions.get(\"window\").width\n      }\n    },\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Create event\",\n    onPress: createEventButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: \"#f9e9d2\"\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  switchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  },\n  title: {\n    fontSize: 20,\n    color: \"#202020\",\n    fontWeight: \"500\",\n    marginVertical: 15\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    createEvent: createEvent\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    events: state.events\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HostEventScreen);","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/screens/HostEventScreen.js"],"names":["React","useState","StatusBar","DateTimeInput","AppTextInput","AppButton","createEvent","connect","bindActionCreators","firebase","MapView","MapComponent","HostEventScreen","navigation","nameOfEvent","setNameOfEvent","descriptionOfEvent","setDescriptionOfEvent","isDressCodeEnabled","setIsDressCodeEnabled","dressCode","setDressCode","Date","now","date","setDate","isEndDateEnabled","setIsEndDateEnabled","endDate","setEndDate","replyDate","setReplyDate","isReplyByDateEnabled","setIsReplyByDateEnabled","longitudeLatitude","setLongitudeLatitude","toggleRSVPSwitch","previousState","toggleDressCodeSwitch","toggleEndDateSwitch","createEventButton","description","hasDressCode","hasRsvp","name","replyByTime","firestore","Timestamp","fromDate","time","Location","GeoPoint","coords","latitude","longitude","endTime","goBack","navigate","styles","safeAreaContainer","text","switchContainer","title","false","true","map","width","Dimensions","get","height","StyleSheet","create","flex","backgroundColor","container","alignItems","justifyContent","flexDirection","fontSize","color","fontWeight","marginVertical","mapDispatchToProps","dispatch","mapStateToProps","state","user","events"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  SafeAreaView,\n  Text,\n  StyleSheet,\n  ScrollView,\n  Switch,\n  View,\n  Dimensions,\n  CheckBox,\n} from \"react-native\";\nimport DateTimeInput from \"../components/DateTimeInput\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport AppButton from \"../components/AppButton\";\nimport { createEvent } from \"../redux/actions/events\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport \"firebase/firestore\";\nimport * as firebase from \"firebase\";\nimport MapView from \"react-native-maps\";\nimport MapComponent from \"../components/MapComponent\";\n\nconst HostEventScreen = ({ navigation, createEvent }) => {\n  const [nameOfEvent, setNameOfEvent] = useState(\"\");\n  const [descriptionOfEvent, setDescriptionOfEvent] = useState(\"\");\n  const [isDressCodeEnabled, setIsDressCodeEnabled] = useState(false);\n  const [dressCode, setDressCode] = useState(\"\");\n  const [date, setDate] = useState(new Date(Date.now()));\n  const [isEndDateEnabled, setIsEndDateEnabled] = useState(false);\n  const [endDate, setEndDate] = useState(new Date(Date.now()));\n  const [replyDate, setReplyDate] = useState(new Date(Date.now()));\n  const [isReplyByDateEnabled, setIsReplyByDateEnabled] = useState(false);\n  const [longitudeLatitude, setLongitudeLatitude] = useState(null);\n\n  const toggleRSVPSwitch = () =>\n    setIsReplyByDateEnabled((previousState) => !previousState);\n  const toggleDressCodeSwitch = () =>\n    setIsDressCodeEnabled((previousState) => !previousState);\n  const toggleEndDateSwitch = () =>\n    setIsEndDateEnabled((previousState) => !previousState);\n\n  const createEventButton = () => {\n    createEvent({\n      description: descriptionOfEvent,\n      dressCode: dressCode,\n      hasDressCode: isDressCodeEnabled,\n      hasRsvp: isReplyByDateEnabled,\n      name: nameOfEvent,\n      replyByTime: firebase.firestore.Timestamp.fromDate(replyDate),\n      time: firebase.firestore.Timestamp.fromDate(date),\n      Location: new firebase.firestore.GeoPoint(\n        longitudeLatitude.coords.latitude,\n        longitudeLatitude.coords.longitude\n      ),\n      endTime: firebase.firestore.Timestamp.fromDate(endDate),\n    });\n    navigation.goBack();\n    navigation.navigate(\"Show Events\");\n  };\n\n  return (\n    <SafeAreaView style={styles.safeAreaContainer}>\n      <ScrollView>\n        <AppTextInput\n          value={nameOfEvent}\n          onChangeText={(text) => setNameOfEvent(text)}\n          //leftIcon=\"account\"\n          placeholder=\"Enter Name of Event\"\n          autoCapitalize=\"none\"\n          keyboardType=\"default\"\n          textContentType=\"none\"\n        />\n        <AppTextInput\n          value={descriptionOfEvent}\n          onChangeText={(text) => setDescriptionOfEvent(text)}\n          //leftIcon=\"account\"\n          placeholder=\"Enter Description of Event\"\n          autoCapitalize=\"none\"\n          keyboardType=\"default\"\n          textContentType=\"none\"\n        />\n        <View style={styles.switchContainer}>\n          <Text style={styles.title}>Dress code? </Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n            thumbColor={isDressCodeEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleDressCodeSwitch}\n            value={isDressCodeEnabled}\n          />\n        </View>\n        {isDressCodeEnabled ? (\n          <AppTextInput\n            value={dressCode}\n            onChangeText={(text) => setDressCode(text)}\n            //leftIcon=\"account\"\n            placeholder=\"Enter Dress Code\"\n            autoCapitalize=\"none\"\n            keyboardType=\"default\"\n            textContentType=\"none\"\n          />\n        ) : null}\n        <DateTimeInput setDate={setDate} date={date} isDateOfEvent={true} />\n        <View style={styles.switchContainer}>\n          <Text style={styles.title}>Set an end date? </Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n            thumbColor={isEndDateEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleEndDateSwitch}\n            value={isEndDateEnabled}\n          />\n        </View>\n        {isEndDateEnabled ? (\n          <DateTimeInput\n            setDate={setEndDate}\n            date={endDate}\n            isDateOfEvent={false}\n            isEndDate={true}\n          />\n        ) : null}\n        <View style={styles.switchContainer}>\n          <Text style={styles.title}>RSVP? </Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n            thumbColor={isReplyByDateEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleRSVPSwitch}\n            value={isReplyByDateEnabled}\n          />\n        </View>\n        {isReplyByDateEnabled ? (\n          <DateTimeInput\n            setDate={setReplyDate}\n            date={replyDate}\n            isDateOfEvent={false}\n          />\n        ) : null}\n        <MapComponent\n          longitudeLatitude={longitudeLatitude}\n          setLongitudeLatitude={setLongitudeLatitude}\n          style={{\n            map: {\n              width: Dimensions.get(\"window\").width,\n              height: Dimensions.get(\"window\").width,\n            },\n          }}\n          navigation={navigation}\n        />\n        <AppButton title=\"Create event\" onPress={createEventButton} />\n        <StatusBar style=\"auto\" />\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: \"#f9e9d2\",\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  switchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n  title: {\n    fontSize: 20,\n    color: \"#202020\",\n    fontWeight: \"500\",\n    marginVertical: 15,\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ createEvent }, dispatch);\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    events: state.events,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HostEventScreen);\n"]},"metadata":{},"sourceType":"module"}
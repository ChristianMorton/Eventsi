{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/src/navigation/AuthenticationStack.js\";\n\nimport React, { useEffect } from \"react\";\nimport SignIn from \"../screens/AuthFlow/SignInScreen\";\nimport SignUp from \"../screens/AuthFlow/SignUpScreen\";\nimport ConfirmSignUp from \"../screens/AuthFlow/ConfirmSignUp\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Firebase from \"../config/Firebase\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { updateEmail, updatePassword, login, getUser } from \"../redux/actions/user\";\nvar AuthenticationStack = createStackNavigator();\n\nvar AuthenticationNavigator = function AuthenticationNavigator(_ref) {\n  var updateAuthState = _ref.updateAuthState,\n      getUser = _ref.getUser;\n  useEffect(function () {\n    var cUser = Firebase.auth().currentUser;\n\n    if (cUser) {\n      getUser(cUser.uid);\n\n      if (cUser != null) {\n        updateAuthState(\"loggedIn\");\n      }\n    } else {\n      updateAuthState(\"loggedOut\");\n    }\n\n    Firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        getUser(user.uid);\n\n        if (user != null) {\n          updateAuthState(\"loggedIn\");\n        }\n      } else {\n        updateAuthState(\"loggedOut\");\n      }\n    });\n  }, []);\n  return React.createElement(AuthenticationStack.Navigator, {\n    headerMode: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthenticationStack.Screen, {\n    name: \"SignIn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, function (screenProps) {\n    return React.createElement(SignIn, _extends({}, screenProps, {\n      updateAuthState: updateAuthState,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }));\n  }), React.createElement(AuthenticationStack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(AuthenticationStack.Screen, {\n    name: \"ConfirmSignUp\",\n    component: ConfirmSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateEmail: updateEmail,\n    updatePassword: updatePassword,\n    login: login,\n    getUser: getUser\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticationNavigator);","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/navigation/AuthenticationStack.js"],"names":["React","useEffect","SignIn","SignUp","ConfirmSignUp","createStackNavigator","Firebase","bindActionCreators","connect","updateEmail","updatePassword","login","getUser","AuthenticationStack","AuthenticationNavigator","updateAuthState","cUser","auth","currentUser","uid","onAuthStateChanged","user","screenProps","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,aAAP;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,QAAP;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,OAJF;AAOA,IAAMC,mBAAmB,GAAGR,oBAAoB,EAAhD;;AACA,IAAMS,uBAAuB,GAAG,SAA1BA,uBAA0B,OAAkC;AAAA,MAA/BC,eAA+B,QAA/BA,eAA+B;AAAA,MAAdH,OAAc,QAAdA,OAAc;AAChEX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMe,KAAK,GAAGV,QAAQ,CAACW,IAAT,GAAgBC,WAA9B;;AACA,QAAIF,KAAJ,EAAW;AACTJ,MAAAA,OAAO,CAACI,KAAK,CAACG,GAAP,CAAP;;AACA,UAAIH,KAAK,IAAI,IAAb,EAAmB;AACjBD,QAAAA,eAAe,CAAC,UAAD,CAAf;AACD;AACF,KALD,MAKO;AACLA,MAAAA,eAAe,CAAC,WAAD,CAAf;AACD;;AACDT,IAAAA,QAAQ,CAACW,IAAT,GAAgBG,kBAAhB,CAAmC,UAAUC,IAAV,EAAgB;AACjD,UAAIA,IAAJ,EAAU;AACRT,QAAAA,OAAO,CAACS,IAAI,CAACF,GAAN,CAAP;;AACA,YAAIE,IAAI,IAAI,IAAZ,EAAkB;AAChBN,UAAAA,eAAe,CAAC,UAAD,CAAf;AACD;AACF,OALD,MAKO;AACLA,QAAAA,eAAe,CAAC,WAAD,CAAf;AACD;AACF,KATD;AAUD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,SACE,oBAAC,mBAAD,CAAqB,SAArB;AAA+B,IAAA,UAAU,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD,CAAqB,MAArB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACO,WAAD;AAAA,WACC,oBAAC,MAAD,eAAYA,WAAZ;AAAyB,MAAA,eAAe,EAAEP,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;AAAA,GADH,CADF,EAME,oBAAC,mBAAD,CAAqB,MAArB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,SAAS,EAAEZ,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,mBAAD,CAAqB,MAArB;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,SAAS,EAAEC,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAcD,CArCD;;AAuCA,IAAMmB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAOjB,kBAAkB,CACvB;AAAEE,IAAAA,WAAW,EAAXA,WAAF;AAAeC,IAAAA,cAAc,EAAdA,cAAf;AAA+BC,IAAAA,KAAK,EAALA,KAA/B;AAAsCC,IAAAA,OAAO,EAAPA;AAAtC,GADuB,EAEvBY,QAFuB,CAAzB;AAID,CALD;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLL,IAAAA,IAAI,EAAEK,KAAK,CAACL;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeb,OAAO,CACpBiB,eADoB,EAEpBF,kBAFoB,CAAP,CAGbT,uBAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport SignIn from \"../screens/AuthFlow/SignInScreen\";\nimport SignUp from \"../screens/AuthFlow/SignUpScreen\";\nimport ConfirmSignUp from \"../screens/AuthFlow/ConfirmSignUp\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Firebase from \"../config/Firebase\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {\n  updateEmail,\n  updatePassword,\n  login,\n  getUser,\n} from \"../redux/actions/user\";\n\nconst AuthenticationStack = createStackNavigator();\nconst AuthenticationNavigator = ({ updateAuthState, getUser }) => {\n  useEffect(() => {\n    const cUser = Firebase.auth().currentUser;\n    if (cUser) {\n      getUser(cUser.uid);\n      if (cUser != null) {\n        updateAuthState(\"loggedIn\");\n      }\n    } else {\n      updateAuthState(\"loggedOut\");\n    }\n    Firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        getUser(user.uid);\n        if (user != null) {\n          updateAuthState(\"loggedIn\");\n        }\n      } else {\n        updateAuthState(\"loggedOut\");\n      }\n    });\n  }, []);\n\n  return (\n    <AuthenticationStack.Navigator headerMode=\"none\">\n      <AuthenticationStack.Screen name=\"SignIn\">\n        {(screenProps) => (\n          <SignIn {...screenProps} updateAuthState={updateAuthState} />\n        )}\n      </AuthenticationStack.Screen>\n      <AuthenticationStack.Screen name=\"SignUp\" component={SignUp} />\n      <AuthenticationStack.Screen\n        name=\"ConfirmSignUp\"\n        component={ConfirmSignUp}\n      />\n    </AuthenticationStack.Navigator>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    { updateEmail, updatePassword, login, getUser },\n    dispatch\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthenticationNavigator);\n"]},"metadata":{},"sourceType":"module"}
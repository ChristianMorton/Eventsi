{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/src/screens/AuthFlow/SignInScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AppTextInput from \"../../components/AppTextInput\";\nimport AppButton from \"../../components/AppButton\";\nimport Firebase from \"../../config/Firebase\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { updateEmail, updatePassword, login, getUser } from \"../../redux/actions/user\";\nimport { getEvent } from \"../../redux/actions/events\";\n\nvar SignIn = function SignIn(_ref) {\n  var navigation = _ref.navigation,\n      updateAuthState = _ref.updateAuthState,\n      user = _ref.user,\n      updatePassword = _ref.updatePassword,\n      updateEmail = _ref.updateEmail,\n      login = _ref.login,\n      getUser = _ref.getUser;\n\n  var signIn = function signIn() {\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            login();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    Firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        getUser(user.uid);\n\n        if (user != null) {\n          updateAuthState(\"loggedIn\");\n        }\n      } else {\n        updateAuthState(\"loggedOut\");\n      }\n    });\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.safeAreaContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Sign in to your account\"), React.createElement(AppTextInput, {\n    value: user.email,\n    onChangeText: function onChangeText(text) {\n      return updateEmail(text);\n    },\n    leftIcon: \"account\",\n    placeholder: \"Enter Email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(AppTextInput, {\n    value: user.password,\n    onChangeText: function onChangeText(text) {\n      return updatePassword(text);\n    },\n    leftIcon: \"lock\",\n    placeholder: \"Enter Password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Login\",\n    onPress: signIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.footerButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"SignUp\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.forgotPasswordButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Don't have an account yet? Sign Up\"))), React.createElement(View, {\n    style: styles.footerButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"ConfirmSignUp\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.forgotPasswordButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Got a verification code?\")))));\n};\n\nvar styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: \"#f9e9d2\"\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    color: \"#202020\",\n    fontWeight: \"500\",\n    marginVertical: 15\n  },\n  footerButtonContainer: {\n    marginVertical: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  forgotPasswordButtonText: {\n    color: \"tomato\",\n    fontSize: 18,\n    fontWeight: \"600\"\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateEmail: updateEmail,\n    updatePassword: updatePassword,\n    login: login,\n    getUser: getUser,\n    getEvent: getEvent\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/screens/AuthFlow/SignInScreen.js"],"names":["React","useState","useEffect","AppTextInput","AppButton","Firebase","bindActionCreators","connect","updateEmail","updatePassword","login","getUser","getEvent","SignIn","navigation","updateAuthState","user","signIn","auth","onAuthStateChanged","uid","styles","safeAreaContainer","container","title","email","text","password","footerButtonContainer","navigate","forgotPasswordButtonText","StyleSheet","create","flex","backgroundColor","alignItems","fontSize","color","fontWeight","marginVertical","justifyContent","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\nimport { SafeAreaView } from \"react-native\";\nimport AppTextInput from \"../../components/AppTextInput\";\nimport AppButton from \"../../components/AppButton\";\nimport Firebase from \"../../config/Firebase\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {\n  updateEmail,\n  updatePassword,\n  login,\n  getUser,\n} from \"../../redux/actions/user\";\nimport { getEvent } from \"../../redux/actions/events\";\n\nconst SignIn = ({\n  navigation,\n  updateAuthState,\n  user,\n  updatePassword,\n  updateEmail,\n  login,\n  getUser,\n}) => {\n  const signIn = async () => {\n    login();\n  };\n\n  useEffect(() => {\n    Firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        getUser(user.uid);\n        if (user != null) {\n          updateAuthState(\"loggedIn\");\n        }\n      } else {\n        updateAuthState(\"loggedOut\");\n      }\n    });\n  }, []);\n\n  return (\n    <SafeAreaView style={styles.safeAreaContainer}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Sign in to your account</Text>\n        <AppTextInput\n          value={user.email}\n          onChangeText={(text) => updateEmail(text)}\n          leftIcon=\"account\"\n          placeholder=\"Enter Email\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n        />\n        <AppTextInput\n          value={user.password}\n          onChangeText={(text) => updatePassword(text)}\n          leftIcon=\"lock\"\n          placeholder=\"Enter Password\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry\n          textContentType=\"password\"\n        />\n        <AppButton title=\"Login\" onPress={signIn} />\n        <View style={styles.footerButtonContainer}>\n          <TouchableOpacity onPress={() => navigation.navigate(\"SignUp\")}>\n            <Text style={styles.forgotPasswordButtonText}>\n              Don't have an account yet? Sign Up\n            </Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.footerButtonContainer}>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"ConfirmSignUp\")}\n          >\n            <Text style={styles.forgotPasswordButtonText}>\n              Got a verification code?\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: \"#f9e9d2\",\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  title: {\n    fontSize: 20,\n    color: \"#202020\",\n    fontWeight: \"500\",\n    marginVertical: 15,\n  },\n  footerButtonContainer: {\n    marginVertical: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  forgotPasswordButtonText: {\n    color: \"tomato\",\n    fontSize: 18,\n    fontWeight: \"600\",\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    { updateEmail, updatePassword, login, getUser, getEvent },\n    dispatch\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}
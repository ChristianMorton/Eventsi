{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/src/screens/JoinEventScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport AppButton from \"../components/AppButton\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport { joinEvent } from \"../redux/actions/events\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Clipboard from \"expo-clipboard\";\n\nvar JoinEventScreen = function JoinEventScreen(_ref) {\n  var navigation = _ref.navigation,\n      joinEvent = _ref.joinEvent,\n      events = _ref.events;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventID = _useState2[0],\n      setEventID = _useState2[1];\n\n  var fetchCopiedText = function fetchCopiedText() {\n    var text;\n    return _regeneratorRuntime.async(function fetchCopiedText$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Clipboard.getStringAsync());\n\n          case 2:\n            text = _context.sent;\n            setEventID(text);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var joinEventButton = function joinEventButton(id) {\n    return _regeneratorRuntime.async(function joinEventButton$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            joinEvent(id).then(function () {\n              var joinedEvent = events.event.find(function (element) {\n                return element.id == id;\n              });\n              navigation.navigate(\"Show Events\");\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(AppTextInput, {\n    value: eventID,\n    onChangeText: function onChangeText(text) {\n      return setEventID(text);\n    },\n    placeholder: \"Enter Event ID\",\n    autoCapitalize: \"none\",\n    keyboardType: \"default\",\n    textContentType: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Paste from Clipboard\",\n    onPress: fetchCopiedText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Join\",\n    onPress: function onPress() {\n      joinEventButton(eventID);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n    backgroundColor: \"#f9e9d2\"\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    joinEvent: joinEvent\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    events: state.events\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEventScreen);","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/screens/JoinEventScreen.js"],"names":["React","useState","AppButton","AppTextInput","joinEvent","connect","bindActionCreators","Clipboard","JoinEventScreen","navigation","events","eventID","setEventID","fetchCopiedText","getStringAsync","text","joinEventButton","id","then","joinedEvent","event","find","element","navigate","styles","container","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","backgroundColor","mapDispatchToProps","dispatch","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, StyleSheet, SafeAreaView, StatusBar } from \"react-native\";\nimport AppButton from \"../components/AppButton\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport { joinEvent } from \"../redux/actions/events\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Clipboard from \"expo-clipboard\";\n\nconst JoinEventScreen = ({ navigation, joinEvent, events }) => {\n  const [eventID, setEventID] = useState(\"\");\n\n  const fetchCopiedText = async () => {\n    const text = await Clipboard.getStringAsync();\n    setEventID(text);\n  };\n\n  const joinEventButton = async (id) => {\n    joinEvent(id).then(() => {\n      const joinedEvent = events.event.find((element) => element.id == id);\n      navigation.navigate(\"Show Events\");\n    });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View>\n        <AppTextInput\n          value={eventID}\n          onChangeText={(text) => setEventID(text)}\n          //leftIcon=\"account\"\n          placeholder=\"Enter Event ID\"\n          autoCapitalize=\"none\"\n          keyboardType=\"default\"\n          textContentType=\"none\"\n        />\n        <AppButton title=\"Paste from Clipboard\" onPress={fetchCopiedText} />\n        <AppButton\n          title=\"Join\"\n          onPress={() => {\n            joinEventButton(eventID);\n          }}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n    backgroundColor: \"#f9e9d2\",\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ joinEvent }, dispatch);\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    events: state.events,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEventScreen);\n"]},"metadata":{},"sourceType":"module"}
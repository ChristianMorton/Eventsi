{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/src/screens/InitialScreen.js\";\n\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Firebase from \"../config/Firebase\";\nimport AppButton from \"../components/AppButton\";\nimport { getMyEvents } from \"../redux/actions/events\";\nimport \"firebase/functions\";\n\nvar InitialScreen = function InitialScreen(_ref) {\n  var navigation = _ref.navigation,\n      user = _ref.user,\n      getMyEvents = _ref.getMyEvents,\n      events = _ref.events;\n\n  var hostEvent = function hostEvent() {\n    console.log(\"Host Event\");\n    navigation.navigate(\"HostEventScreen\");\n  };\n\n  useEffect(function () {\n    getMyEvents();\n  }, []);\n\n  var joinEvent = function joinEvent() {\n    console.log(\"Join Event\");\n    navigation.navigate(\"JoinEventScreen\");\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.safeAreaContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(AppButton, {\n    title: \"Host Event\",\n    onPress: hostEvent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Join Event\",\n    onPress: joinEvent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      navigation.navigate(\"Your Events\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"calendar\",\n    color: \"black\",\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Events\")))));\n};\n\nvar styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: \"#f9e9d2\"\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    color: \"#202020\",\n    fontWeight: \"500\",\n    marginVertical: 15\n  },\n  footerButtonContainer: {\n    marginVertical: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  forgotPasswordButtonText: {\n    color: \"tomato\",\n    fontSize: 18,\n    fontWeight: \"600\"\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getMyEvents: getMyEvents\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    events: state.events\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialScreen);","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/screens/InitialScreen.js"],"names":["React","useEffect","connect","bindActionCreators","MaterialCommunityIcons","Firebase","AppButton","getMyEvents","InitialScreen","navigation","user","events","hostEvent","console","log","navigate","joinEvent","styles","safeAreaContainer","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","title","fontSize","color","fontWeight","marginVertical","footerButtonContainer","forgotPasswordButtonText","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Text,\n  SafeAreaView,\n  TouchableHighlight,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Firebase from \"../config/Firebase\";\nimport AppButton from \"../components/AppButton\";\nimport { getMyEvents } from \"../redux/actions/events\";\nimport \"firebase/functions\";\n\nconst InitialScreen = ({ navigation, user, getMyEvents, events }) => {\n  const hostEvent = () => {\n    console.log(\"Host Event\");\n    navigation.navigate(\"HostEventScreen\");\n  };\n\n  useEffect(() => {\n    getMyEvents();\n  }, []);\n\n  const joinEvent = () => {\n    console.log(\"Join Event\");\n    navigation.navigate(\"JoinEventScreen\");\n  };\n\n  return (\n    <SafeAreaView style={styles.safeAreaContainer}>\n      <View style={styles.container}>\n        <AppButton title=\"Host Event\" onPress={hostEvent} />\n        <AppButton title=\"Join Event\" onPress={joinEvent} />\n        <TouchableHighlight\n          onPress={() => {\n            navigation.navigate(\"Your Events\");\n          }}\n        >\n          <View>\n            <MaterialCommunityIcons name=\"calendar\" color=\"black\" size={20} />\n            <Text>Events</Text>\n          </View>\n        </TouchableHighlight>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: \"#f9e9d2\",\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontSize: 20,\n    color: \"#202020\",\n    fontWeight: \"500\",\n    marginVertical: 15,\n  },\n  footerButtonContainer: {\n    marginVertical: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  forgotPasswordButtonText: {\n    color: \"tomato\",\n    fontSize: 18,\n    fontWeight: \"600\",\n  },\n});\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ getMyEvents }, dispatch);\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    events: state.events,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialScreen);\n"]},"metadata":{},"sourceType":"module"}
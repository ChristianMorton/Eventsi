{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/src/screens/HomeScreen.js\";\n\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport EventListPanel from \"../components/EventListPanel\";\nimport { getMyEvents } from \"../redux/actions/events\";\nimport \"firebase/firestore\";\nimport * as firebase from \"firebase\";\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var updateAuthState = _ref.updateAuthState,\n      events = _ref.events,\n      getMyEvents = _ref.getMyEvents;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, [refreshing]);\n  useFocusEffect(useCallback(function () {\n    getMyEvents();\n  }));\n  useEffect(function () {\n    getMyEvents();\n  }, [refreshing]);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(EventListPanel, {\n      name: item.name,\n      description: item.description,\n      time: item.time.toDate(),\n      eventInfo: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: events.event,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n    backgroundColor: \"#f9e9d2\"\n  },\n  item: {\n    backgroundColor: \"#f9c2ff\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getMyEvents: getMyEvents\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    events: state.events\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/screens/HomeScreen.js"],"names":["React","useCallback","useState","useEffect","connect","bindActionCreators","EventListPanel","getMyEvents","firebase","useFocusEffect","wait","timeout","Promise","resolve","setTimeout","HomeScreen","updateAuthState","events","refreshing","setRefreshing","onRefresh","then","renderItem","item","name","description","time","toDate","styles","container","event","id","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","backgroundColor","padding","marginVertical","marginHorizontal","title","fontSize","mapDispatchToProps","dispatch","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  SafeAreaView,\n  Text,\n  StyleSheet,\n  FlatList,\n  View,\n  StatusBar,\n  RefreshControl,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport EventListPanel from \"../components/EventListPanel\";\nimport { getMyEvents } from \"../redux/actions/events\";\nimport \"firebase/firestore\";\nimport * as firebase from \"firebase\";\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nconst wait = (timeout) => {\n  return new Promise((resolve) => setTimeout(resolve, timeout));\n};\n\nconst HomeScreen = ({ updateAuthState, events, getMyEvents }) => {\n  const [refreshing, setRefreshing] = useState(false);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    wait(2000).then(() => setRefreshing(false));\n  }, [refreshing]);\n\n  useFocusEffect(\n    useCallback(() => {\n      getMyEvents();\n    })\n  );\n\n  useEffect(() => {\n    getMyEvents();\n  }, [refreshing]);\n\n  const renderItem = ({ item }) => (\n    <EventListPanel\n      name={item.name}\n      description={item.description}\n      time={item.time.toDate()}\n      eventInfo={item}\n    />\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={events.event}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      />\n      <StatusBar style=\"auto\" />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n    backgroundColor: \"#f9e9d2\",\n  },\n  item: {\n    backgroundColor: \"#f9c2ff\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ getMyEvents }, dispatch);\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    events: state.events,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\n"]},"metadata":{},"sourceType":"module"}
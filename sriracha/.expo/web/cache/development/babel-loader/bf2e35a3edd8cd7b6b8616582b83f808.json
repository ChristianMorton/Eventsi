{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/src/navigation/EventsTabs.js\";\n\nimport React from \"react\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport ChatTab from \"../components/ChatTab\";\nimport DetailsTab from \"../components/DetailsTab\";\nimport GalleryComponent from \"../components/GalleryComponent\";\nimport PostsTab from \"../components/PostsTab\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nvar Tab = createMaterialTopTabNavigator();\n\nvar EventsTabs = function EventsTabs(_ref) {\n  var id = _ref.id,\n      RSVPTime = _ref.RSVPTime,\n      name = _ref.name,\n      description = _ref.description,\n      time = _ref.time,\n      dressCode = _ref.dressCode,\n      Location = _ref.Location,\n      hasRSVP = _ref.hasRSVP,\n      chooseImage = _ref.chooseImage;\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      activeTintColor: \"black\",\n      inactiveTintColor: \"gray\",\n      showLabel: false,\n      showIcon: true\n    },\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n\n          if (route.name === \"Details\") {\n            iconName = focused ? \"information\" : \"information-outline\";\n          } else if (route.name === \"Posts\") {\n            iconName = focused ? \"note-multiple\" : \"note-multiple-outline\";\n          } else if (route.name === \"Gallery\") {\n            iconName = focused ? \"image-multiple\" : \"image-multiple-outline\";\n          } else if (route.name === \"Chat\") {\n            iconName = focused ? \"chat\" : \"chat-outline\";\n          }\n\n          return React.createElement(MaterialCommunityIcons, {\n            name: iconName,\n            color: color,\n            size: 20,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, function (screenProps) {\n    return React.createElement(DetailsTab, _extends({}, screenProps, {\n      id: id,\n      RSVPTime: RSVPTime,\n      name: name,\n      description: description,\n      time: time,\n      dressCode: dressCode,\n      Location: Location,\n      hasRSVP: hasRSVP,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }));\n  }), React.createElement(Tab.Screen, {\n    name: \"Posts\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, function (screenProps) {\n    return React.createElement(PostsTab, _extends({}, screenProps, {\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }\n    }));\n  }), React.createElement(Tab.Screen, {\n    name: \"Gallery\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, function (screenProps) {\n    return React.createElement(GalleryComponent, _extends({}, screenProps, {\n      chooseImage: chooseImage,\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }));\n  }), React.createElement(Tab.Screen, {\n    name: \"Chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, function (screenProps) {\n    return React.createElement(ChatTab, _extends({}, screenProps, {\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 27\n      }\n    }));\n  }));\n};\n\nexport default EventsTabs;","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/navigation/EventsTabs.js"],"names":["React","createMaterialTopTabNavigator","ChatTab","DetailsTab","GalleryComponent","PostsTab","MaterialCommunityIcons","TouchableOpacity","Tab","EventsTabs","id","RSVPTime","name","description","time","dressCode","Location","hasRSVP","chooseImage","activeTintColor","inactiveTintColor","showLabel","showIcon","route","tabBarIcon","focused","color","size","iconName","screenProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport ChatTab from \"../components/ChatTab\";\nimport DetailsTab from \"../components/DetailsTab\";\nimport GalleryComponent from \"../components/GalleryComponent\";\nimport PostsTab from \"../components/PostsTab\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Tab = createMaterialTopTabNavigator();\n\nconst EventsTabs = ({\n  id,\n  RSVPTime,\n  name,\n  description,\n  time,\n  dressCode,\n  Location,\n  hasRSVP,\n  chooseImage,\n}) => {\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        activeTintColor: \"black\",\n        inactiveTintColor: \"gray\",\n        showLabel: false,\n        showIcon: true,\n      }}\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === \"Details\") {\n            iconName = focused ? \"information\" : \"information-outline\";\n          } else if (route.name === \"Posts\") {\n            iconName = focused ? \"note-multiple\" : \"note-multiple-outline\";\n          } else if (route.name === \"Gallery\") {\n            iconName = focused ? \"image-multiple\" : \"image-multiple-outline\";\n          } else if (route.name === \"Chat\") {\n            iconName = focused ? \"chat\" : \"chat-outline\";\n          }\n\n          // You can return any component that you like here!\n          return (\n            <MaterialCommunityIcons name={iconName} color={color} size={20} />\n          );\n        },\n      })}\n    >\n      <Tab.Screen name=\"Details\">\n        {(screenProps) => (\n          <DetailsTab\n            {...screenProps}\n            id={id}\n            RSVPTime={RSVPTime}\n            name={name}\n            description={description}\n            time={time}\n            dressCode={dressCode}\n            Location={Location}\n            hasRSVP={hasRSVP}\n          />\n        )}\n      </Tab.Screen>\n      <Tab.Screen name=\"Posts\">\n        {(screenProps) => <PostsTab {...screenProps} id={id} />}\n      </Tab.Screen>\n      <Tab.Screen name=\"Gallery\">\n        {(screenProps) => (\n          <GalleryComponent\n            {...screenProps}\n            chooseImage={chooseImage}\n            id={id}\n          />\n        )}\n      </Tab.Screen>\n\n      <Tab.Screen name=\"Chat\">\n        {(screenProps) => <ChatTab {...screenProps} id={id} />}\n      </Tab.Screen>\n    </Tab.Navigator>\n  );\n};\n\nexport default EventsTabs;\n"]},"metadata":{},"sourceType":"module"}
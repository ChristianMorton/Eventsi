{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/src/components/PostsTab.js\";\n\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport \"firebase/storage\";\nimport * as firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getEventPosts } from \"../redux/actions/events\";\nimport CreatePost from \"./CreatePost\";\n\nvar PostsTab = function PostsTab(_ref) {\n  var getEventPosts = _ref.getEventPosts,\n      id = _ref.id,\n      events = _ref.events;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  var storage = firebase.storage();\n\n  var renderItem = function renderItem(item) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, item.item.name), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, item.item.text));\n  };\n\n  useEffect(function () {\n    getEventPosts(id);\n    onRefresh();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#f9e9d2\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(CreatePost, {\n    idOfEvent: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    numColumns: 1,\n    data: events,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item, index) {\n      return \"key\" + index;\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    backgroundColor: \"#f9e9d2\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  },\n  time: {\n    fontSize: 22\n  },\n  description: {\n    fontSize: 18\n  },\n  image: {\n    flex: 1,\n    maxWidth: Dimensions.get(\"window\").width\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getEventPosts: getEventPosts\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    events: state.events.currentEventPosts\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsTab);","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/components/PostsTab.js"],"names":["React","useEffect","useCallback","useState","firebase","connect","bindActionCreators","getEventPosts","CreatePost","PostsTab","id","events","refreshing","setRefreshing","wait","timeout","Promise","resolve","setTimeout","onRefresh","then","storage","renderItem","item","name","text","flex","backgroundColor","index","styles","StyleSheet","create","container","marginTop","StatusBar","currentHeight","padding","marginVertical","marginHorizontal","title","fontSize","time","description","image","maxWidth","Dimensions","get","width","mapDispatchToProps","dispatch","mapStateToProps","state","currentEventPosts"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  FlatList,\n  RefreshControl,\n  Dimensions,\n  StatusBar,\n  Image,\n  Button,\n} from \"react-native\";\nimport \"firebase/storage\";\nimport * as firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getEventPosts } from \"../redux/actions/events\";\nimport CreatePost from \"./CreatePost\";\n\nconst PostsTab = ({ getEventPosts, id, events }) => {\n  const [refreshing, setRefreshing] = useState(false);\n\n  const wait = (timeout) => {\n    return new Promise((resolve) => setTimeout(resolve, timeout));\n  };\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    //getEventMedia(id);\n    // setEventMedia(events.currentEventMedia);\n    //getURI();\n    //getEventMediaFunction();\n    wait(2000).then(() => setRefreshing(false));\n  }, []);\n\n  const storage = firebase.storage();\n\n  const renderItem = (item) => {\n    return (\n      <View>\n        <Text>{item.item.name}</Text>\n        <Text>{item.item.text}</Text>\n      </View>\n    );\n  };\n\n  useEffect(() => {\n    getEventPosts(id);\n    onRefresh();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"#f9e9d2\" }}>\n      <CreatePost idOfEvent={id} />\n\n      <FlatList\n        numColumns={1}\n        data={events}\n        renderItem={renderItem}\n        keyExtractor={(item, index) => \"key\" + index}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    backgroundColor: \"#f9e9d2\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n  time: {\n    fontSize: 22,\n  },\n  description: {\n    fontSize: 18,\n  },\n  image: {\n    flex: 1,\n    maxWidth: Dimensions.get(\"window\").width,\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ getEventPosts }, dispatch);\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    events: state.events.currentEventPosts,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsTab);\n"]},"metadata":{},"sourceType":"module"}
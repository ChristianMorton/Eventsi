{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianmorton/Eventsi/sriracha/App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Firebase from \"./src/config/Firebase\";\nimport { getUser } from \"./src/redux/actions/user\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducer from \"./src/redux/reducers\";\nimport TabNavigator from \"./src/navigation/TabNavigator\";\nimport AuthenticationNavigator from \"./src/navigation/AuthenticationStack\";\nimport { AppNavigator } from \"./src/navigation/AppNavigator\";\nimport AppDrawer from \"./src/navigation/AppDrawer\";\nvar middleware = applyMiddleware(thunkMiddleware);\nvar store = createStore(reducer, middleware);\n\nvar Initializing = function Initializing() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"tomato\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar App = function App() {\n  var _useState = useState(\"initializing\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      isUserLoggedIn = _useState2[0],\n      setUserLoggedIn = _useState2[1];\n\n  useEffect(function () {\n    checkAuthState();\n  }, []);\n\n  var checkAuthState = function checkAuthState() {\n    var user;\n    return _regeneratorRuntime.async(function checkAuthState$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Firebase.auth().currentUser);\n\n          case 2:\n            user = _context.sent;\n\n            if (user) {\n              console.log(\"User is signed in\");\n              setUserLoggedIn(\"loggedIn\");\n              store.dispatch(getUser(user.uid));\n            } else {\n              console.log(\"User is not signed in\");\n              setUserLoggedIn(\"loggedOut\");\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateAuthState = function updateAuthState(isUserLoggedIn) {\n    setUserLoggedIn(isUserLoggedIn);\n  };\n\n  useEffect(function () {\n    Firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        getUser(user.uid);\n\n        if (user != null) {\n          updateAuthState(\"loggedIn\");\n        }\n      } else {\n        updateAuthState(\"loggedOut\");\n      }\n    });\n  }, []);\n  return React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, isUserLoggedIn === \"initializing\" && React.createElement(Initializing, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 47\n    }\n  }), isUserLoggedIn === \"loggedIn\" && React.createElement(AppDrawer, {\n    updateAuthState: updateAuthState,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), isUserLoggedIn === \"loggedOut\" && React.createElement(AuthenticationNavigator, {\n    updateAuthState: updateAuthState,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({});\nexport default App;","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/App.js"],"names":["React","useState","useEffect","NavigationContainer","Firebase","getUser","createStore","applyMiddleware","Provider","thunkMiddleware","reducer","TabNavigator","AuthenticationNavigator","AppNavigator","AppDrawer","middleware","store","Initializing","flex","justifyContent","alignItems","App","isUserLoggedIn","setUserLoggedIn","checkAuthState","auth","currentUser","user","console","log","dispatch","uid","updateAuthState","onAuthStateChanged","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, ActivityIndicator } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Firebase from \"./src/config/Firebase\";\nimport { getUser } from \"./src/redux/actions/user\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducer from \"./src/redux/reducers\";\nimport TabNavigator from \"./src/navigation/TabNavigator\";\nimport AuthenticationNavigator from \"./src/navigation/AuthenticationStack\";\nimport { AppNavigator } from \"./src/navigation/AppNavigator\";\nimport AppDrawer from \"./src/navigation/AppDrawer\";\n\nconst middleware = applyMiddleware(thunkMiddleware);\nconst store = createStore(reducer, middleware);\n\nconst Initializing = () => {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <ActivityIndicator size=\"large\" color=\"tomato\" />\n    </View>\n  );\n};\n\nconst App = () => {\n  const [isUserLoggedIn, setUserLoggedIn] = useState(\"initializing\");\n\n  useEffect(() => {\n    checkAuthState();\n  }, []);\n\n  const checkAuthState = async () => {\n    const user = await Firebase.auth().currentUser;\n    if (user) {\n      console.log(\"User is signed in\");\n      setUserLoggedIn(\"loggedIn\");\n      store.dispatch(getUser(user.uid));\n    } else {\n      console.log(\"User is not signed in\");\n      setUserLoggedIn(\"loggedOut\");\n    }\n  };\n\n  const updateAuthState = (isUserLoggedIn) => {\n    setUserLoggedIn(isUserLoggedIn);\n  };\n\n  useEffect(() => {\n    Firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        getUser(user.uid);\n        if (user != null) {\n          updateAuthState(\"loggedIn\");\n        }\n      } else {\n        updateAuthState(\"loggedOut\");\n      }\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        {isUserLoggedIn === \"initializing\" && <Initializing />}\n        {isUserLoggedIn === \"loggedIn\" && (\n          <AppDrawer updateAuthState={updateAuthState} />\n        )}\n        {isUserLoggedIn === \"loggedOut\" && (\n          <AuthenticationNavigator updateAuthState={updateAuthState} />\n        )}\n      </NavigationContainer>\n    </Provider>\n  );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
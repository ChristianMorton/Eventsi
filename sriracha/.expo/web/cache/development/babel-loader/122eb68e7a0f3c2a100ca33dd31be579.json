{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from \"redux\";\nimport { LOGIN, SIGNUP, UPDATE_EMAIL, UPDATE_PASSWORD, UPDATE_NAME } from \"../actions/user\";\nimport { GET_MY_EVENTS, CREATE_EVENT, GET_EVENT_MEDIA, GET_EVENT_POSTS } from \"../actions/events\";\n\nvar user = function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN:\n      return action.payload;\n\n    case SIGNUP:\n      return action.payload;\n\n    case UPDATE_EMAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: action.payload\n      });\n\n    case UPDATE_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        password: action.payload\n      });\n\n    case UPDATE_NAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar events = function events() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_MY_EVENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        event: action.payload\n      });\n\n    case CREATE_EVENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        createdEvent: action.payload\n      });\n\n    case GET_EVENT_MEDIA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentEventMedia: action.payload\n      });\n\n    case GET_EVENT_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentEventPosts: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  user: user,\n  events: events\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/christianmorton/Eventsi/sriracha/src/redux/reducers/index.js"],"names":["combineReducers","LOGIN","SIGNUP","UPDATE_EMAIL","UPDATE_PASSWORD","UPDATE_NAME","GET_MY_EVENTS","CREATE_EVENT","GET_EVENT_MEDIA","GET_EVENT_POSTS","user","state","action","type","payload","email","password","name","events","event","createdEvent","currentEventMedia","currentEventPosts","rootReducer"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,YAHF,EAIEC,eAJF,EAKEC,WALF;AAOA,SACEC,aADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,eAJF;;AAOA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,KAAL;AACE,aAAOW,MAAM,CAACE,OAAd;;AACF,SAAKZ,MAAL;AACE,aAAOU,MAAM,CAACE,OAAd;;AACF,SAAKX,YAAL;AACE,6CAAYQ,KAAZ;AAAmBI,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAAjC;;AACF,SAAKV,eAAL;AACE,6CAAYO,KAAZ;AAAmBK,QAAAA,QAAQ,EAAEJ,MAAM,CAACE;AAApC;;AACF,SAAKT,WAAL;AACE,6CAAYM,KAAZ;AAAmBM,QAAAA,IAAI,EAAEL,MAAM,CAACE;AAAhC;;AACF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD;;AAiBA,IAAMO,MAAM,GAAG,SAATA,MAAS,GAAwB;AAAA,MAAvBP,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,6CAAYK,KAAZ;AAAmBQ,QAAAA,KAAK,EAAEP,MAAM,CAACE;AAAjC;;AACF,SAAKP,YAAL;AACE,6CAAYI,KAAZ;AAAmBS,QAAAA,YAAY,EAAER,MAAM,CAACE;AAAxC;;AACF,SAAKN,eAAL;AACE,6CAAYG,KAAZ;AAAmBU,QAAAA,iBAAiB,EAAET,MAAM,CAACE;AAA7C;;AACF,SAAKL,eAAL;AACE,6CAAYE,KAAZ;AAAmBW,QAAAA,iBAAiB,EAAEV,MAAM,CAACE;AAA7C;;AACF;AACE,aAAOH,KAAP;AAVJ;AAYD,CAbD;;AAeA,IAAMY,WAAW,GAAGvB,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAJA,IADkC;AAElCQ,EAAAA,MAAM,EAANA;AAFkC,CAAD,CAAnC;AAKA,eAAeK,WAAf","sourcesContent":["import { combineReducers } from \"redux\";\nimport {\n  LOGIN,\n  SIGNUP,\n  UPDATE_EMAIL,\n  UPDATE_PASSWORD,\n  UPDATE_NAME,\n} from \"../actions/user\";\nimport {\n  GET_MY_EVENTS,\n  CREATE_EVENT,\n  GET_EVENT_MEDIA,\n  GET_EVENT_POSTS,\n} from \"../actions/events\";\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return action.payload;\n    case SIGNUP:\n      return action.payload;\n    case UPDATE_EMAIL:\n      return { ...state, email: action.payload };\n    case UPDATE_PASSWORD:\n      return { ...state, password: action.payload };\n    case UPDATE_NAME:\n      return { ...state, name: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst events = (state = {}, action) => {\n  switch (action.type) {\n    case GET_MY_EVENTS:\n      return { ...state, event: action.payload };\n    case CREATE_EVENT:\n      return { ...state, createdEvent: action.payload };\n    case GET_EVENT_MEDIA:\n      return { ...state, currentEventMedia: action.payload };\n    case GET_EVENT_POSTS:\n      return { ...state, currentEventPosts: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user,\n  events,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}